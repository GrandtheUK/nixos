# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  fileSystems = {
    "/" = {
      device = "/dev/disk/by-label/NIX-ROOT";
      fsType = "btrfs";
      options = [
        "compress=zstd:1"
        "subvolid=256"
      ];
    };
    "/home" = {
      device = "/dev/disk/by-label/NIX-ROOT";
      fsType = "btrfs";
      options = [
        "compress=zstd:1"
        "subvolid=257"
      ];
    };
    "/nix" = {
      device = "/dev/disk/by-label/NIX-ROOT";
      fsType = "btrfs";
      options = [
        "compress=zstd:1"
        "subvolid=258"
        "noatime"
      ];
    };
    "/var" = {
      device = "/dev/disk/by-label/NIX-ROOT";
      fsType = "btrfs";
      options = [
        "compress=zstd:1"
        "subvolid=259"
      ];
    };
    "/boot/efi" = {
      device = "/dev/disk/by-label/NIX-BOOT";
      fsType = "vfat";
    };
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-8211929e346a.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-86e4867f61a5.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethfbe9d96.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
